# .env.example
# Copiez ce fichier vers .env et remplissez avec vos vraies valeurs

# =====================================
# APPLICATION CONFIGURATION
# =====================================

# Environnement (development, staging, production)
NODE_ENV=development

# Version de l'application
npm_package_version=1.0.0

# =====================================
# API CONFIGURATION
# =====================================

# URL de base de l'API ChatSeller
API_BASE_URL=https://api.chatseller.app

# Version de l'API
API_VERSION=v1

# Timeout des requêtes API (en millisecondes)
API_TIMEOUT=30000

# =====================================
# AUTHENTICATION
# =====================================

# Clé secrète pour les tokens JWT (générer une clé sécurisée)
JWT_SECRET=your-super-secret-jwt-key-here

# Durée de vie des tokens (en secondes)
JWT_EXPIRES_IN=86400

# Durée de vie des refresh tokens (en secondes)
REFRESH_TOKEN_EXPIRES_IN=604800

# =====================================
# DATABASE CONFIGURATION
# =====================================

# URL de connexion à la base de données PostgreSQL
DATABASE_URL=postgresql://username:password@localhost:5432/chatseller

# Configuration Supabase
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_KEY=your-supabase-service-role-key

# =====================================
# EXTERNAL SERVICES
# =====================================

# OpenAI API Key pour l'IA
OPENAI_API_KEY=sk-your-openai-api-key

# Configuration email (pour les notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# =====================================
# STORAGE CONFIGURATION
# =====================================

# Configuration du stockage de fichiers
STORAGE_PROVIDER=supabase
STORAGE_BUCKET=chatseller-files

# Taille maximale des fichiers (en bytes)
MAX_FILE_SIZE=10485760

# Types de fichiers autorisés
ALLOWED_FILE_TYPES=pdf,doc,docx,csv,txt

# =====================================
# ANALYTICS & MONITORING
# =====================================

# Google Analytics ID (optionnel)
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Sentry DSN pour le monitoring d'erreurs (optionnel)
SENTRY_DSN=https://your-sentry-dsn

# =====================================
# REDIS CONFIGURATION (optionnel)
# =====================================

# URL Redis pour le cache et les sessions
REDIS_URL=redis://localhost:6379

# Préfixe pour les clés Redis
REDIS_PREFIX=chatseller:

# =====================================
# RATE LIMITING
# =====================================

# Limite de requêtes par minute par IP
RATE_LIMIT_REQUESTS=100

# Fenêtre de temps pour le rate limiting (en minutes)
RATE_LIMIT_WINDOW=1

# =====================================
# CORS CONFIGURATION
# =====================================

# Domaines autorisés pour CORS (séparés par des virgules)
CORS_ORIGINS=http://localhost:3000,https://dashboard.chatseller.app,https://widget.chatseller.app

# =====================================
# WEBHOOK CONFIGURATION
# =====================================

# Secret pour la validation des webhooks
WEBHOOK_SECRET=your-webhook-secret

# URL de base pour les webhooks
WEBHOOK_BASE_URL=https://api.chatseller.app/webhooks

# =====================================
# FEATURE FLAGS
# =====================================

# Activer/désactiver certaines fonctionnalités
FEATURE_UPSELL_ENABLED=true
FEATURE_ANALYTICS_ENABLED=true
FEATURE_EXPORT_ENABLED=true
FEATURE_REAL_TIME_ENABLED=true

# =====================================
# DEPLOYMENT CONFIGURATION
# =====================================

# Port du serveur (pour le développement local)
PORT=3001

# Host du serveur
HOST=0.0.0.0

# Niveau de log (error, warn, info, debug)
LOG_LEVEL=info

# =====================================
# CDN CONFIGURATION (optionnel)
# =====================================

# URL du CDN pour les assets statiques
CDN_URL=https://cdn.chatseller.app

# =====================================
# SOCIAL AUTH (optionnel)
# =====================================

# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# =====================================
# PAYMENT CONFIGURATION (optionnel)
# =====================================

# Stripe
STRIPE_PUBLIC_KEY=pk_test_your-stripe-public-key
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=whsec_your-stripe-webhook-secret

# =====================================
# DEVELOPMENT ONLY
# =====================================

# Activer les logs de debug
DEBUG=true

# Activer le hot reload
HOT_RELOAD=true

# Désactiver les checks SSL en développement
NODE_TLS_REJECT_UNAUTHORIZED=0

# =====================================
# SECURITY HEADERS
# =====================================

# Content Security Policy
CSP_ENABLED=true

# HSTS (HTTP Strict Transport Security)
HSTS_ENABLED=true

# X-Frame-Options
X_FRAME_OPTIONS=DENY

# =====================================
# BACKUP CONFIGURATION
# =====================================

# Configuration pour les sauvegardes automatiques
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# =====================================
# MONITORING ENDPOINTS
# =====================================

# Activer les endpoints de santé
HEALTH_CHECK_ENABLED=true

# Activer les métriques Prometheus
METRICS_ENABLED=false

# =====================================
# INTERNATIONALIZATION
# =====================================

# Langue par défaut
DEFAULT_LOCALE=fr

# Langues supportées (séparées par des virgules)
SUPPORTED_LOCALES=fr,en,es

# =====================================
# CACHE CONFIGURATION
# =====================================

# Durée de cache par défaut (en secondes)
CACHE_TTL=3600

# Activer le cache des réponses API
API_CACHE_ENABLED=true

# =====================================
# NOTES IMPORTANTES
# =====================================

# 1. Ne jamais committer le fichier .env en production
# 2. Utiliser des clés sécurisées pour JWT_SECRET et WEBHOOK_SECRET
# 3. Configurer CORS_ORIGINS selon vos domaines en production
# 4. Activer HTTPS en production
# 5. Configurer les limites de taux selon vos besoins
# 6. Sauvegarder régulièrement votre base de données
# 7. Monitorer les logs d'erreur avec Sentry
# 8. Utiliser des variables d'environnement sécurisées en production