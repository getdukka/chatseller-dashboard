import{B as i,m as t}from"./Dp9Ai0YM.js";import{b as n,a as c}from"./BIGBsnYa.js";import"./bq2zsT37.js";const l=i("conversations",{state:()=>({conversations:[],currentConversation:null,isLoading:!1,isLoadingConversation:!1,error:null,lastFetch:null}),getters:{activeConversations:e=>e.conversations.filter(r=>r.status==="active"),completedConversations:e=>e.conversations.filter(r=>r.status==="completed"),totalConversations:e=>e.conversations.length,activeCount:e=>e.conversations.filter(r=>r.status==="active").length,getConversationById:e=>r=>e.conversations.find(o=>o.id===r),latestConversations:e=>[...e.conversations].sort((r,o)=>new Date(o.lastActivity).getTime()-new Date(r.lastActivity).getTime()).slice(0,10),needsRefresh:e=>{if(!e.lastFetch)return!0;const r=new Date(Date.now()-300*1e3);return e.lastFetch<r}},actions:{async fetchConversations(e=!1){if(!e&&!this.needsRefresh)return;if(!c().isAuthenticated){this.error="Utilisateur non authentifié";return}this.isLoading=!0,this.error=null;try{console.log("💬 [Conversations] Chargement conversations via API...");const s=await n().conversations.list();console.log("💬 [Conversations] Réponse API:",s),s.success&&s.data?(this.conversations=s.data,this.lastFetch=new Date,this.error=null,console.log("✅ [Conversations] Conversations chargées:",s.data.length)):(this.error=s.error||"Erreur lors du chargement des conversations",console.error("❌ [Conversations] Erreur:",this.error))}catch(o){this.error=o.message||"Erreur lors du chargement des conversations",console.error("❌ [Conversations] Exception:",o)}finally{this.isLoading=!1}},async fetchConversation(e){this.isLoadingConversation=!0,this.error=null;try{console.log("💬 [Conversations] Chargement conversation:",e);const o=await n().conversations.get(e);if(o.success&&o.data){this.currentConversation=o.data;const s=this.conversations.findIndex(a=>a.id===e);return s!==-1&&(this.conversations[s]=o.data),console.log("✅ [Conversations] Conversation chargée"),o.data}else return this.error=o.error||"Erreur lors du chargement de la conversation",null}catch(r){return this.error=r.message||"Erreur lors du chargement de la conversation",console.error("❌ [Conversations] Exception:",r),null}finally{this.isLoadingConversation=!1}},async createConversation(e){try{console.log("💬 [Conversations] Création conversation...");const o=await n().conversations.create(e);return o.success&&o.data?(this.conversations.unshift(o.data),console.log("✅ [Conversations] Conversation créée"),o.data):(this.error=o.error||"Erreur lors de la création de la conversation",null)}catch(r){return this.error=r.message||"Erreur lors de la création de la conversation",console.error("❌ [Conversations] Exception:",r),null}},setCurrentConversation(e){this.currentConversation=e},clearError(){this.error=null},clearData(){this.conversations=[],this.currentConversation=null,this.error=null,this.lastFetch=null}}}),h=()=>{const e=l();return{conversations:t(()=>e.conversations),currentConversation:t(()=>e.currentConversation),isLoading:t(()=>e.isLoading),isLoadingConversation:t(()=>e.isLoadingConversation),error:t(()=>e.error),activeConversations:t(()=>e.activeConversations),completedConversations:t(()=>e.completedConversations),totalConversations:t(()=>e.totalConversations),activeCount:t(()=>e.activeCount),latestConversations:t(()=>e.latestConversations),fetchConversations:e.fetchConversations,fetchConversation:e.fetchConversation,createConversation:e.createConversation,setCurrentConversation:e.setCurrentConversation,clearError:e.clearError,clearData:e.clearData,getConversationById:e.getConversationById}};export{h as useConversations,l as useConversationsStore};
