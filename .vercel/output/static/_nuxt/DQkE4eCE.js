import{B as r}from"./Dp9Ai0YM.js";const a=r("agentConfig",{state:()=>({currentAgent:null,navigationSource:"",timestamp:null}),getters:{hasValidAgent:e=>!!(e.currentAgent&&e.currentAgent.id&&e.currentAgent.name),isDataFresh:e=>e.timestamp?Date.now()-e.timestamp<300*1e3:!1},actions:{setAgentForConfig(e,t="vendeurs-ia"){console.log("📦 Store AgentConfig: Sauvegarde agent pour configuration:",e.name,e.id),this.currentAgent={...e,sourceComponent:t},this.navigationSource=t,this.timestamp=Date.now();try{localStorage.setItem("chatseller_temp_agent_config",JSON.stringify({agent:this.currentAgent,timestamp:this.timestamp}))}catch(n){console.warn("⚠️ Impossible de sauvegarder dans localStorage:",n)}},getAgentForConfig(){if(this.hasValidAgent&&this.isDataFresh)return console.log("✅ Store AgentConfig: Données agent récupérées depuis store"),this.currentAgent;try{const e=localStorage.getItem("chatseller_temp_agent_config");if(e){const t=JSON.parse(e);if(Date.now()-t.timestamp<300*1e3&&t.agent)return console.log("✅ Store AgentConfig: Données agent récupérées depuis localStorage"),this.currentAgent=t.agent,this.timestamp=t.timestamp,this.currentAgent;console.log("🕐 Store AgentConfig: Données localStorage expirées, nettoyage"),localStorage.removeItem("chatseller_temp_agent_config")}}catch(e){console.warn("⚠️ Erreur lecture localStorage:",e)}return console.log("❌ Store AgentConfig: Aucune donnée agent valide trouvée"),null},clearAgentConfig(){console.log("🧹 Store AgentConfig: Nettoyage données agent"),this.currentAgent=null,this.navigationSource="",this.timestamp=null;try{localStorage.removeItem("chatseller_temp_agent_config")}catch(e){console.warn("⚠️ Erreur nettoyage localStorage:",e)}},async fetchAgentIfNeeded(e){if(this.hasValidAgent&&this.currentAgent?.id===e&&this.isDataFresh)return this.currentAgent;try{return console.log("🔄 Store AgentConfig: Récupération agent depuis API:",e),null}catch(t){return console.error("❌ Store AgentConfig: Erreur récupération agent:",t),null}}}});export{a as useAgentConfigStore};
