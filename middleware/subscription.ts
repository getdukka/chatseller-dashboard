// middleware/subscription.ts - AVEC IMPORTS EXPLICITES
import { useAuthStore } from '~/stores/auth'

export default defineNuxtRouteMiddleware(async (to, from) => {
  // Ne pas ex√©cuter c√¥t√© serveur
  if (process.server) return

  try {
    const authStore = useAuthStore()

    // V√©rifier si l'utilisateur est connect√©
    if (!authStore.isLoggedIn) {
      return navigateTo('/login')
    }

    const user = authStore.user
    if (!user) {
      return navigateTo('/login')
    }

    // TODO: Impl√©menter la logique de v√©rification d'abonnement
    // Pour l'instant, on autorise tous les utilisateurs connect√©s
    const hasValidSubscription = true // √Ä remplacer par la vraie logique

    if (!hasValidSubscription && to.path !== '/billing') {
      console.log('üí≥ Middleware subscription: Abonnement requis, redirection vers billing')
      throw createError({
        statusCode: 402,
        statusMessage: 'Abonnement requis'
      })
    }

    console.log('‚úÖ Middleware subscription: Abonnement valide')
  } catch (error) {
    console.error('‚ùå Middleware subscription: Erreur:', error)
    // En cas d'erreur, rediriger vers le dashboard pour √©viter de bloquer
    return navigateTo('/i')
  }
})