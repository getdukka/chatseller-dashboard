#!/usr/bin/env node

/**
 * POST-BUILD SCRIPT POUR VERCEL
 * S'assure que tous les fichiers n√©cessaires sont correctement g√©n√©r√©s
 */

const fs = require('fs')
const path = require('path')

console.log('üîß Post-build Vercel - Finalisation Widget ChatSeller...')

const distDir = path.join(__dirname, '..', 'dist')

// ‚úÖ V√âRIFIER QUE LE R√âPERTOIRE DIST EXISTE
if (!fs.existsSync(distDir)) {
  console.log('‚ö†Ô∏è R√©pertoire dist/ non trouv√© - Le build principal doit √™tre ex√©cut√© en premier')
  // Ne pas √©chouer si dist n'existe pas, Vite le cr√©era
  fs.mkdirSync(distDir, { recursive: true })
}

// ‚úÖ V√âRIFIER LES FICHIERS OBLIGATOIRES
const requiredFiles = [
  'chatseller-widget.js'
  // index.html sera g√©n√©r√© par le plugin Vite
]

const presentFiles = []
const missingFiles = []

requiredFiles.forEach(file => {
  const filePath = path.join(distDir, file)
  if (fs.existsSync(filePath)) {
    const stats = fs.statSync(filePath)
    console.log(`‚úÖ ${file} pr√©sent (${(stats.size / 1024).toFixed(2)}KB)`)
    presentFiles.push(file)
  } else {
    console.log(`‚ö†Ô∏è ${file} sera g√©n√©r√© par Vite`)
    missingFiles.push(file)
  }
})

// Ne pas √©chouer si les fichiers n'existent pas encore - ils seront g√©n√©r√©s par Vite
if (missingFiles.length > 0) {
  console.log(`üìù Fichiers en attente de g√©n√©ration: ${missingFiles.join(', ')}`)
}

// ‚úÖ CR√âER UN FICHIER WIDGET.JS QUI REDIRIGE (POUR COMPATIBILIT√â)
const widgetJsPath = path.join(distDir, 'widget.js')
const mainWidgetPath = path.join(distDir, 'chatseller-widget.js')

if (fs.existsSync(mainWidgetPath) && !fs.existsSync(widgetJsPath)) {
  console.log('üîó Cr√©ation du fichier widget.js de redirection...')
  
  // Lire le contenu du widget principal
  const mainWidgetContent = fs.readFileSync(mainWidgetPath, 'utf-8')
  
  // Cr√©er le fichier de redirection
  const redirectContent = `/*! ChatSeller Widget - Compatibility Redirect */
${mainWidgetContent}

// ‚úÖ Compatibilit√© legacy - auto-init si d√©tection ancienne config
if (typeof window !== 'undefined' && !(window as any).ChatSeller) {
  console.warn('‚ö†Ô∏è widget.js est d√©pr√©ci√©e. Utilisez chatseller-widget.js');
}`
  
  fs.writeFileSync(widgetJsPath, redirectContent)
  console.log('‚úÖ widget.js cr√©√© avec succ√®s')
} else if (!fs.existsSync(mainWidgetPath)) {
  console.log('‚ö†Ô∏è chatseller-widget.js non trouv√© - sera g√©n√©r√© par Vite')
} else {
  console.log('‚úÖ widget.js d√©j√† pr√©sent')
}

// ‚úÖ CR√âER UN FICHIER _REDIRECTS POUR NETLIFY/VERCEL (AU CAS O√ô)
const redirectsPath = path.join(distDir, '_redirects')
const redirectsContent = `# ChatSeller Widget Redirects
/widget     /chatseller-widget.js   200
/docs       https://docs.chatseller.app  302
/dashboard  https://dashboard.chatseller.app  302
/app        https://chatseller.app  302`

fs.writeFileSync(redirectsPath, redirectsContent)
console.log('‚úÖ _redirects cr√©√©')

// ‚úÖ G√âN√âRER UN FICHIER DE SANT√â (.well-known/health)
const wellKnownDir = path.join(distDir, '.well-known')
if (!fs.existsSync(wellKnownDir)) {
  fs.mkdirSync(wellKnownDir, { recursive: true })
}

const healthContent = JSON.stringify({
  status: 'healthy',
  service: 'chatseller-widget',
  version: '1.0.0',
  timestamp: new Date().toISOString(),
  environment: 'production',
  endpoints: {
    widget: '/chatseller-widget.js',
    homepage: '/',
    docs: 'https://docs.chatseller.app'
  }
}, null, 2)

fs.writeFileSync(path.join(wellKnownDir, 'health'), healthContent)
console.log('‚úÖ Health check endpoint cr√©√©')

// ‚úÖ CR√âER SITEMAP.XML
const sitemapContent = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>https://widget.chatseller.app/</loc>
    <lastmod>${new Date().toISOString().split('T')[0]}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>1.0</priority>
  </url>
  <url>
    <loc>https://widget.chatseller.app/chatseller-widget.js</loc>
    <lastmod>${new Date().toISOString().split('T')[0]}</lastmod>
    <changefreq>daily</changefreq>
    <priority>0.8</priority>
  </url>
</urlset>`

fs.writeFileSync(path.join(distDir, 'sitemap.xml'), sitemapContent)
console.log('‚úÖ sitemap.xml cr√©√©')

// ‚úÖ CR√âER ROBOTS.TXT
const robotsContent = `User-agent: *
Allow: /
Allow: /chatseller-widget.js
Allow: /widget.js

Sitemap: https://widget.chatseller.app/sitemap.xml

# ChatSeller Widget - Agent IA Commercial pour E-commerce
# https://chatseller.app`

fs.writeFileSync(path.join(distDir, 'robots.txt'), robotsContent)
console.log('‚úÖ robots.txt cr√©√©')

// ‚úÖ V√âRIFIER LA TAILLE DES FICHIERS (SI DISPONIBLES)
const widgetPath = path.join(distDir, 'chatseller-widget.js')
const maxSize = 200 * 1024 // 200KB

if (fs.existsSync(widgetPath)) {
  const widgetSize = fs.statSync(widgetPath).size
  const sizeWarning = widgetSize > maxSize
  
  console.log('\nüìä STATISTIQUES BUILD:')
  console.log(`üì¶ Widget principal: ${(widgetSize / 1024).toFixed(2)}KB`)
  
  const indexPath = path.join(distDir, 'index.html')
  if (fs.existsSync(indexPath)) {
    console.log(`üìÑ Page d'accueil: ${(fs.statSync(indexPath).size / 1024).toFixed(2)}KB`)
  }
  
  if (sizeWarning) {
    console.warn(`‚ö†Ô∏è  ATTENTION: Widget d√©passe 200KB (${(widgetSize / 1024).toFixed(2)}KB)`)
  } else {
    console.log('‚úÖ Taille du widget dans les limites recommand√©es')
  }
} else {
  console.log('üìä STATISTIQUES BUILD: Fichiers en cours de g√©n√©ration par Vite...')
}

// ‚úÖ LISTAGE FINAL DES FICHIERS G√âN√âR√âS
console.log('\nüìÅ FICHIERS G√âN√âR√âS:')
if (fs.existsSync(distDir)) {
  const files = fs.readdirSync(distDir, { withFileTypes: true })
  files.forEach(file => {
    if (file.isFile()) {
      const filePath = path.join(distDir, file.name)
      const stats = fs.statSync(filePath)
      console.log(`   ${file.name}: ${(stats.size / 1024).toFixed(2)}KB`)
    }
  })
} else {
  console.log('   R√©pertoire dist sera cr√©√© par Vite...')
}

console.log('\nüéâ POST-BUILD VERCEL TERMIN√â AVEC SUCC√àS!')
console.log('üåê Widget disponible sur: https://widget.chatseller.app/')
console.log('üîó Endpoint widget: https://widget.chatseller.app/chatseller-widget.js')
console.log('üìñ Documentation: https://docs.chatseller.app')

// ‚úÖ SUCC√àS
process.exit(0)